get(paste("rf",i,j,sep = "_"))[["rsq"]]
mean(get(paste("rf",i,j,sep = "_"))[["rsq"]])
get(paste("rf",i,j,sep = "_"))
summary(get(paste("rf",i,j,sep = "_")))
get(paste("rf",i,j,sep = "_"))[["rsq"]]
get(paste("rf",i,j,sep = "_"))
accuracy<-array(0,3,4,4)
for(i in 1:4){
for(j in 1:4){
assign(paste("lasso",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 1)
)
mod_min<-which.min(get(paste("lasso",i,j,sep = "_"))[["cvm"]])
accuracy[1,i,j]<-get(paste("lasso",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
assign(paste("ridge",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 0)
)
mod_min<-which.min(get(paste("ridge",i,j,sep = "_"))[["cvm"]])
accuracy[2,i,j]<-get(paste("ridge",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
assign(paste("rf",i,j,sep = "_"),
randomForest(get(paste0("mat_",i)), get(paste0("mod_y",j)))
)
accuracy[3,i,j]<-get(paste("rf",i,j,sep = "_"))[["rsq"]][500]
}
}
source('~/.active-rstudio-document', echo=TRUE)
array(0,3,4,4)
?array
accuracy<-array(0,dim = c(3,4,4)
for(i in 1:4){
for(j in 1:4){
assign(paste("lasso",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 1)
)
mod_min<-which.min(get(paste("lasso",i,j,sep = "_"))[["cvm"]])
accuracy[1,i,j]<-get(paste("lasso",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
assign(paste("ridge",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 0)
)
mod_min<-which.min(get(paste("ridge",i,j,sep = "_"))[["cvm"]])
accuracy[2,i,j]<-get(paste("ridge",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
assign(paste("rf",i,j,sep = "_"),
randomForest(get(paste0("mat_",i)), get(paste0("mod_y",j)))
)
accuracy[3,i,j]<-get(paste("rf",i,j,sep = "_"))[["rsq"]][500]
}
}
accuracy[2,i,j]<-get(paste("ridge",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
accuracy<-array(0,dim = c(3,4,4)
accuracy<-array(0,dim = c(3,4,4))
for(i in 1:4){
for(j in 1:4){
assign(paste("lasso",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 1)
)
mod_min<-which.min(get(paste("lasso",i,j,sep = "_"))[["cvm"]])
accuracy[1,i,j]<-get(paste("lasso",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
assign(paste("ridge",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 0)
)
mod_min<-which.min(get(paste("ridge",i,j,sep = "_"))[["cvm"]])
accuracy[2,i,j]<-get(paste("ridge",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
assign(paste("rf",i,j,sep = "_"),
randomForest(get(paste0("mat_",i)), get(paste0("mod_y",j)))
)
accuracy[3,i,j]<-get(paste("rf",i,j,sep = "_"))[["rsq"]][500]
}
}
accuracy
ridge_4_3
ridge_3_4
ridge_4_3
accuracy
ridge_1_1
ridge_1_1$beta
ridge_1_1$betas
str(ridge_1_1)
ridge_1_1$glmnet.fit$beta
ridge_1_1$glmnet.fit$beta[,4]
?randomForest
for(i in 1:4){
for(j in 1:4){
assign(paste("lasso",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 1)
)
mod_min<-which.min(get(paste("lasso",i,j,sep = "_"))[["cvm"]])
accuracy[1,i,j]<-get(paste("lasso",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
coeffs<-get(paste("lasso",i,j,sep = "_"))[["glmnet.fit"]][["beta"]][,mod_min]
assign(paste("ridge",i,j,sep = "_"),
cv.glmnet(get(paste0("mat_",i)), get(paste0("mod_y",j)),
family = "gaussian", alpha = 0)
)
mod_min<-which.min(get(paste("ridge",i,j,sep = "_"))[["cvm"]])
accuracy[2,i,j]<-get(paste("ridge",i,j,sep = "_"))[["glmnet.fit"]][["dev.ratio"]][mod_min]
coeffs<-get(paste("ridge",i,j,sep = "_"))[["glmnet.fit"]][["beta"]][,mod_min]
assign(paste("rf",i,j,sep = "_"),
randomForest(get(paste0("mat_",i)), get(paste0("mod_y",j)), importance=TRUE)
)
accuracy[3,i,j]<-get(paste("rf",i,j,sep = "_"))[["rsq"]][500]
coeffs<-get(paste("ridge",i,j,sep = "_"))[["glmnet.fit"]][["beta"]][,mod_min]
}
}
rf_1_1
rf_1_1$importance
import<-get(paste("rf",i,j,sep = "_"))[["importance"]][["beta"]][,mod_min]
import<-get(paste("rf",i,j,sep = "_"))[["importance"]]
import
library("RPostgreSQL")
library("reshape")
library("plyr")
library("glmnet")
library("ggCivis")
library("arm")
library(rredshift)
library(RJDBC)
pgsql <- JDBC("org.postgresql.Driver", "$PG/postgresql-9.0-801.jdbc3.jar", "`")
redshift_discovery<-dbConnect(PostgreSQL(), "jdbc:postgresql://redshift.discovery.internal.civis.io/dev?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory", password="4thpTheTyger")
redshift_discovery<-dbConnect(PostgreSQL(), "jdbc:postgresql://redshift.discovery.internal.civis.io:5432/dev?user=pwyatt&password=4thpTheTyger&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory")
redshift_discovery<-dbConnect(PostgreSQL(), "jdbc:postgresql://redshift.discovery.internal.civis.io:5432/dev?user=pwyatt&password=4thpTheTyger&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory")
redshift_discovery<-dbConnect(pgsql, "jdbc:postgresql://redshift.discovery.internal.civis.io:5432/dev?user=pwyatt&password=4thpTheTyger&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory")
pgsql <- JDBC("org.postgresql.Driver", "$PG/postgresql-9.0-801.jdbc3.jar", "`")
pgsql <- JDBC("org.postgresql.Driver", "./postgresql-9.2-1002.jdbc4.jar", "`")
redshift_discovery<-dbConnect(PostgreSQL(), "jdbc:postgresql://redshift.discovery.internal.civis.io:5432/dev?user=pwyatt&password=4thpTheTyger&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory")
redshift_discovery<-dbConnect(PostgreSQL(), "dbc:postgresql://redshift.discovery.internal.civis.io/dev?tcpKeepAlive=true&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory",user="pwyatt")
redshift_discovery<-dbConnect(PostgreSQL(), "dbc:postgresql://redshift.discovery.internal.civis.io/dev?tcpKeepAlive=true&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory&user=pwyatt")
redshift_discovery<-dbConnect(PostgreSQL(), "dbc:postgresql://redshift.discovery.internal.civis.io/dev?tcpKeepAlive=true&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory&user=pwyatt&password=4thpTheTyger")
library("RPostgreSQL")
library(RJDBC)
pgsql <- JDBC("org.postgresql.Driver", "/users/pwyatt/Downloads/postgresql-9.4-1201.jdbc4 (1).jar", "`") #load your postgres java driver
redshift_discovery<-dbConnect(pgsql, "jdbc:postgresql://redshift.discovery.internal.civis.io/dev?tcpKeepAlive=true&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory",user="pwyatt",password="4thpTheTyger") #change username and password
redshift_bad<-dbConnect(pgsql, "jdbc:postgresql://redshift.discovery.internal.civis.io:5433/dev?tcpKeepAlive=true&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory",user="pwyatt",password="4thpTheTyger")
pgsql
uninstall.packages(JDBC)
redshift_discovery<-dbConnect(pgsql, "jdbc:postgresql://redshift.discovery.internal.civis.io:5432/dev?tcpKeepAlive=true&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory",user="pwyatt",password="4thpTheTyger") #change username and password
library(glmnet)
library(Matrix)
setwd("/Users/Pwyatt/Documents/GitHub/Kaggle/Walmart")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
weather <- read.csv("weather.csv")
keys <- read.csv("key.csv")
item <- 1
train_sub <- train[train$item_nbr==item,]
train_sub <- merge(train_sub,keys)
train_sub <- merge(train_sub,weather)
test_sub <- test[test$item_nbr==item,]
test_sub <- merge(test_sub,keys)
test_sub <- merge(test_sub,weather)
test_sub$units <- 0
mdat <- rbind(train_sub,test_sub)
mdat[,c(6:15,17:23)] <- as.numeric(as.character(mdat[,c(6:15,17:23)]))
for(i in c(6:15,17:23)){
mdat[is.na(mdat[,i]),i] <- mean(mdat[,i],na.rm=TRUE)
}
table(is.na(mdat))
mean(mdat[,i],na.rm=TRUE)
head(mdat[,i])
i
head(mdat)
mdat <- rbind(train_sub,test_sub)
for(i in c(6:15,17:23)){
mdat[,i] <- as.numeric(as.character(mdat[,i]))
mdat[is.na(mdat[,i]),i] <- mean(mdat[,i],na.rm=TRUE)
}
head(mdat)
modelMat <- model.matrix(units ~ . -1,mdat)
table(is.na(mdat))
modelMat <- model.matrix(units ~ . -1,mdat)
trainMat <- modelMat[1:nrow(train_sub),]
target <- train_sub$units
table(target) #crazy outliers
sdt <- sd(target[target>0])
mt <- mean(target[target>0])
target[target>(mt+4*sdt)] <- (mt+4*sdt)
hist(target) #soooooo many 0s
hist(target[target>0]) #super log distributed
target <- log(target+.1)
hist(target) #didn't know why I thought that'd be different
hist(target[target>-2]) #more normalish
mod <- glmnet(trainMat, target, family="gaussian")
testMat <- modelMat[(nrow(train_sub)+1):nrow(modelMat),]
test_pred <- predict(mod,testMat)
head(test_pred)
?exp
exp(log(10))
exp(log(77))
test_pred
test_pred <- exp(predict(mod,testMat))-1
test_pred
test_pred
test_pred <- exp(predict(mod,testMat))-.1
test_pred
max(test_pred)
min(test_pred)
test_pred <- data.frame(exp(predict(mod,testMat))-.1)
test_pred[test_pred<0] <- 0
test_pred$item_nmbr<-item
head(test_pred)
mod
dim(mod)
str(mod)
ncol(mod$beta)
testMat <- modelMat[(nrow(train_sub)+1):nrow(modelMat),]
test_pred <- data.frame(exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
test_pred$item_nmbr<-item
test_pred <- data.frame(exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
head(test)
test_pred$testMat$store_nbr
test_pred$test_sub$store_nbr
test_pred$store_nbr <- test_sub$store_nbr
test_pred <- data.frame(exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
test_pred
str(test_pred)
test_pred <- cbind(test_pred,test_sub$store_nbr)
head(test_pred)
str_test_pred
str(test_pred)
test_pred <- data.frame(test_pred)
str(test_pred)
test_pred$item_nmbr <- item
head(test_sub)
test_pred <- (exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
test_pred <- cbind(test_pred, test_sub$store_nbr , test_sub$store_nbr)
test_pred <- data.frame(test_pred)
test_pred$item_nmbr <- item
colnames(test_pred) <- c("pred","date", "store_nbr", "item")
head(test_pred)
test_pred <- (exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
test_pred <- cbind(test_pred, test_sub$date , test_sub$store_nbr)
test_pred <- data.frame(test_pred)
test_pred$item_nmbr <- item
colnames(test_pred) <- c("pred","date", "store_nbr", "item")
preds <- rbind(preds,test_pred)
head(test_pred)
test_sub$date
test_pred$date <- test_sub$date
test_pred <- (exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
test_pred <- cbind(test_pred, test_sub$store_nbr)
test_pred <- data.frame(test_pred)
test_pred$date <- test_sub$date
test_pred$item_nmbr <- item
colnames(test_pred) <- c("pred", "store_nbr", "date", "item")
head(test_pred)
unique(train$item_nbr)
unique(test$item_nbr)
library(glmnet)
library(Matrix)
setwd("/Users/Pwyatt/Documents/GitHub/Kaggle/Walmart")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
weather <- read.csv("weather.csv")
keys <- read.csv("key.csv")
preds<-NULL
for(item in unique(test$item_nbr)){
train_sub <- train[train$item_nbr==item,]
train_sub <- merge(train_sub,keys)
train_sub <- merge(train_sub,weather)
test_sub <- test[test$item_nbr==item,]
test_sub <- merge(test_sub,keys)
test_sub <- merge(test_sub,weather)
test_sub$units <- 0
mdat <- rbind(train_sub,test_sub)
for(i in c(6:15,17:23)){
mdat[,i] <- as.numeric(as.character(mdat[,i]))
mdat[is.na(mdat[,i]),i] <- mean(mdat[,i],na.rm=TRUE)
}
modelMat <- model.matrix(units ~ . -1,mdat)
trainMat <- modelMat[1:nrow(train_sub),]
target <- train_sub$units
table(target) #crazy outliers
sdt <- sd(target[target>0])
mt <- mean(target[target>0])
target[target>(mt+4*sdt)] <- (mt+4*sdt)
hist(target) #soooooo many 0s
hist(target[target>0]) #super log distributed
target <- log(target+.1)
hist(target) #didn't know why I thought that'd be different
hist(target[target>-2]) #more normalish
mod <- glmnet(trainMat, target, family="gaussian")
testMat <- modelMat[(nrow(train_sub)+1):nrow(modelMat),]
test_pred <- (exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
test_pred <- cbind(test_pred, test_sub$store_nbr)
test_pred <- data.frame(test_pred)
test_pred$date <- test_sub$date
test_pred$item_nmbr <- item
colnames(test_pred) <- c("pred", "store_nbr", "date", "item")
preds <- rbind(preds,test_pred)
}
ids <- paste(preds$store_nbr,preds$item_nbr,preds$date,sep="_")
sub <- cbind(ids,preds$pred)
head(sub)
ids <- paste(preds$store_nbr,preds$item,preds$date,sep="_")
sub <- cbind(ids,preds$pred)
head(sub)
samp <- read.csv("key.csv")
head(samp)
samp <- read.csv("sampleSubmission.csv")
head(samp)
table(sub[,1]%in%samp$id)
table(samp$id%in%sub[,1])
sub <- data.frame(cbind(ids,preds$pred))
head(sub)
colnames(sub) <- c("id","units")
write.csv(sub,"sub.csv",row.names=FALSE)
head weather
head(weather)
table(weather$tmax)
table(weather$tmin)
table(weather$snowfall)
table(weather$perciptotal)
table(weather$preciptotal)
colnames(weather)
dim(weather)
table(weather$depart)
table(weather$dewpoint)
table(weather$wetbulb)
table(weather$heat)
table(weather$cool)
table(weather$sunrise)
table(weather$sunset)
table(weather$stnpressure)
table(weather$sealevel)
table(weather$resultspeed)
table(weather$resultdir)
table(weather$avgspeed)
library(gbm)
library(Matrix)
?gbm
setwd("/Users/Pwyatt/Documents/GitHub/Kaggle/Walmart")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
weather <- read.csv("weather.csv")
keys <- read.csv("key.csv")
samp <- read.csv("sampleSubmission.csv")
weather$snowfall[weather$snowfall=="T"] <- .01
weather$preciptotal[weather$preciptotal=="T"] <- .01
weather$depart_missing <- 0
weather$depart_missing[weather$depart=="M"] <- 1
for(i in c(3:12,14:18,20)){
weather[,i] <- as.numeric(as.character(weather[,i]))
weather[is.na(weather[,i]),i] <- mean(weather[,i],na.rm=TRUE)
}
item <- 1
weather <- read.csv("weather.csv")
weather$snowfall <- as.character(weather$snowfall)
weather$snowfall[weather$snowfall=="T"] <- .01
weather$preciptotal <- as.character(weather$preciptotal)
weather$preciptotal[weather$preciptotal=="T"] <- .01
weather$depart_missing <- 0
weather$depart_missing[weather$depart=="M"] <- 1
for(i in c(3:12,14:18,20)){
weather[,i] <- as.numeric(as.character(weather[,i]))
weather[is.na(weather[,i]),i] <- mean(weather[,i],na.rm=TRUE)
}
str(weather)
item
train_sub <- train[train$item_nbr==item,]
train_sub <- merge(train_sub,keys)
train_sub <- merge(train_sub,weather)
test_sub <- test[test$item_nbr==item,]
test_sub <- merge(test_sub,keys)
test_sub <- merge(test_sub,weather)
test_sub$units <- 0
mdat <- rbind(train_sub,test_sub)
modelMat <- model.matrix(units ~ . -1,mdat)
trainMat <- modelMat[1:nrow(train_sub),]
target <- train_sub$units
table(target) #crazy outliers
sdt <- sd(target[target>0])
mt <- mean(target[target>0])
target[target>(mt+4*sdt)] <- (mt+4*sdt)
hist(target) #soooooo many 0s
hist(target[target>0]) #super log distributed
target <- log(target+.1)
hist(target) #didn't know why I thought that'd be different
hist(target[target>-2]) #more normalish
mod <- gbm.fit(trainMat, target, family="gaussian")
mod <- gbm.fit(trainMat, target)
?gbm.fit
mod <- gbm.fit(trainMat, target, ditribution = "gaussian")
mod <- gbm.fit(trainMat, target, distribution = "gaussian")
mod
dim(train_mat)
dim(trainMat)
head(trainMat)
length(unique(weather$codesum))
head(mdat)
str(mdat)
levels(mdat$date)
library(lubridate)
month(mdat$date)
mdat$month <- factor(month(mdat$date))
modelMat <- model.matrix(units ~ .-date-1,mdat)
dim(modelMat)
train_sub <- train[train$item_nbr==item,]
train_sub <- merge(train_sub,keys)
train_sub <- merge(train_sub,weather)
test_sub <- test[test$item_nbr==item,]
test_sub <- merge(test_sub,keys)
test_sub <- merge(test_sub,weather)
test_sub$units <- 0
mdat <- rbind(train_sub,test_sub)
mdat$month <- factor(month(mdat$date))
modelMat <- model.matrix(units ~ .-date-1,mdat)
trainMat <- modelMat[1:nrow(train_sub),]
target <- train_sub$units
table(target) #crazy outliers
sdt <- sd(target[target>0])
mt <- mean(target[target>0])
target[target>(mt+4*sdt)] <- (mt+4*sdt)
hist(target) #soooooo many 0s
hist(target[target>0]) #super log distributed
target <- log(target+.1)
hist(target) #didn't know why I thought that'd be different
hist(target[target>-2]) #more normalish
mod <- gbm.fit(trainMat, target, distribution = "gaussian")
testMat <- modelMat[(nrow(train_sub)+1):nrow(modelMat),]
test_pred <- (exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
test_pred[test_pred<0] <- 0
test_pred <- cbind(test_pred, test_sub$store_nbr)
test_pred <- data.frame(test_pred)
test_pred$date <- test_sub$date
test_pred$item_nmbr <- item
colnames(test_pred) <- c("pred", "store_nbr", "date", "item")
preds <- rbind(preds,test_pred)
test_pred
test_pred <- (exp(predict(mod,testMat))-.1)[,ncol(mod$beta)]
predict(mod,testMat)
?predict.gbm
testMat <- modelMat[(nrow(train_sub)+1):nrow(modelMat),]
test_pred <- (exp(predict(mod,testMat,n.trees=100))-.1)
test_pred[test_pred<0] <- 0
test_pred <- cbind(test_pred, test_sub$store_nbr)
test_pred <- data.frame(test_pred)
test_pred$date <- test_sub$date
test_pred$item_nmbr <- item
colnames(test_pred) <- c("pred", "store_nbr", "date", "item")
test_pred
head(test_pred)
table(test_pred$pred)
library(gbm)
library(Matrix)
library(lubridate)
setwd("/Users/Pwyatt/Documents/GitHub/Kaggle/Walmart")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
weather <- read.csv("weather.csv")
keys <- read.csv("key.csv")
samp <- read.csv("sampleSubmission.csv")
weather$snowfall <- as.character(weather$snowfall)
weather$snowfall[weather$snowfall=="T"] <- .01
weather$preciptotal <- as.character(weather$preciptotal)
weather$preciptotal[weather$preciptotal=="T"] <- .01
weather$depart_missing <- 0
weather$depart_missing[weather$depart=="M"] <- 1
for(i in c(3:12,14:18,20)){
weather[,i] <- as.numeric(as.character(weather[,i]))
weather[is.na(weather[,i]),i] <- mean(weather[,i],na.rm=TRUE)
}
preds<-NULL
for(item in unique(test$item_nbr)){
train_sub <- train[train$item_nbr==item,]
train_sub <- merge(train_sub,keys)
train_sub <- merge(train_sub,weather)
test_sub <- test[test$item_nbr==item,]
test_sub <- merge(test_sub,keys)
test_sub <- merge(test_sub,weather)
test_sub$units <- 0
mdat <- rbind(train_sub,test_sub)
mdat$month <- factor(month(mdat$date))
modelMat <- model.matrix(units ~ .-date-1,mdat)
trainMat <- modelMat[1:nrow(train_sub),]
target <- train_sub$units
table(target) #crazy outliers
sdt <- sd(target[target>0])
mt <- mean(target[target>0])
target[target>(mt+4*sdt)] <- (mt+4*sdt)
hist(target) #soooooo many 0s
hist(target[target>0]) #super log distributed
target <- log(target+.1)
hist(target) #didn't know why I thought that'd be different
hist(target[target>-2]) #more normalish
mod <- gbm.fit(trainMat, target, distribution = "gaussian")
testMat <- modelMat[(nrow(train_sub)+1):nrow(modelMat),]
test_pred <- (exp(predict(mod,testMat,n.trees=100))-.1)
test_pred[test_pred<0] <- 0
test_pred <- cbind(test_pred, test_sub$store_nbr)
test_pred <- data.frame(test_pred)
test_pred$date <- test_sub$date
test_pred$item_nmbr <- item
colnames(test_pred) <- c("pred", "store_nbr", "date", "item")
preds <- rbind(preds,test_pred)
}
ids <- paste(preds$store_nbr,preds$item,preds$date,sep="_")
sub <- data.frame(cbind(ids,preds$pred))
colnames(sub) <- c("id","units")
write.csv(sub,"sub_gbm_g.csv",row.names=FALSE)
head(sub)
